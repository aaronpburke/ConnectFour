{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "98Point6 Drop-Token",
    "description" : "At-home interview implementation of \"98Point6 Drop-Token\" homework assignment",
    "contact" : {
      "name" : "Aaron Burke",
      "url" : "https://aaron-burke.me",
      "email" : "aaron@focuszonedevelopment.com"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "/drop-token"
  } ],
  "paths" : {
    "/" : {
      "get" : {
        "tags" : [ "Game Management" ],
        "summary" : "Get all in-progress games.",
        "operationId" : "GetAllGames",
        "responses" : {
          "200" : {
            "description" : "Returns all in-progress games.",
            "content" : {
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                },
                "example" : [ "gameid1", "gameid2" ]
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Game Management" ],
        "summary" : "Start a new game",
        "requestBody" : {
          "description" : "Game configuration, e.g., player names, board size",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NewGameDetails"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Returns the new game resource.",
            "content" : {
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request."
          }
        }
      }
    },
    "/{gameId}" : {
      "get" : {
        "tags" : [ "Game Management" ],
        "summary" : "Get the state of a game.",
        "operationId" : "GetGame",
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "ID of the game to get the state of",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the specified game state.",
            "content" : {
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameState"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request."
          },
          "404" : {
            "description" : "Game not found."
          }
        }
      }
    },
    "/{gameId}/moves" : {
      "get" : {
        "tags" : [ "Game Actions" ],
        "summary" : "Get a (sub-)list of the moves played.",
        "operationId" : "GetMoves",
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "ID of the game to get moves from",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "start",
          "in" : "query",
          "description" : "Starting move to return (inclusive)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "until",
          "in" : "query",
          "description" : "Ending move to return (inclusive)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the requested game moves.",
            "content" : {
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request."
          },
          "404" : {
            "description" : "Game/moves not found"
          }
        }
      }
    },
    "/{gameId}/moves/{moveNumber}" : {
      "get" : {
        "tags" : [ "Game Actions" ],
        "summary" : "Get a previously played move.",
        "operationId" : "GetMove",
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "ID of the game to get move from",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "moveNumber",
          "in" : "path",
          "description" : "Move sequence number to get",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the requested game move.",
            "content" : {
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GameMove"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed request."
          },
          "404" : {
            "description" : "Game/move not found"
          }
        }
      }
    },
    "/{gameId}/moves/{playerId}" : {
      "post" : {
        "tags" : [ "Game Actions" ],
        "summary" : "Play a new move.",
        "operationId" : "PlayMove",
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "ID of the game to play move on",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "playerId",
          "in" : "path",
          "description" : "Name of the player playing the move",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the new move.",
            "content" : {
              "text/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed input. Illegal move."
          },
          "404" : {
            "description" : "Game not found or player is not a part of it."
          },
          "409" : {
            "description" : "Player tried to act when it's not their turn."
          }
        }
      }
    },
    "/{gameId}/{playerId}" : {
      "delete" : {
        "tags" : [ "Game Actions" ],
        "summary" : "Quit player from the game.",
        "operationId" : "PlayerQuit",
        "parameters" : [ {
          "name" : "gameId",
          "in" : "path",
          "description" : "ID of the game to quit",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "playerId",
          "in" : "path",
          "description" : "Name of the player quitting the game",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Player quit."
          },
          "404" : {
            "description" : "Game not found or player is not a part of it."
          },
          "410" : {
            "description" : "Game is already in DONE state."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "NewGameDetails" : {
        "required" : [ "columns", "players", "rows" ],
        "type" : "object",
        "properties" : {
          "players" : {
            "type" : "array",
            "description" : "Player names",
            "example" : [ "player1", "player2" ],
            "items" : {
              "type" : "string"
            },
            "default" : [ "player1", "player2" ]
          },
          "columns" : {
            "minimum" : 1,
            "type" : "number",
            "description" : "Number of columns on the board",
            "format" : "int32",
            "example" : 4,
            "default" : 4
          },
          "rows" : {
            "minimum" : 1,
            "type" : "number",
            "description" : "Number of rows on the board",
            "format" : "int32",
            "example" : 4,
            "default" : 4
          }
        },
        "description" : "Details of a new game"
      },
      "GameState" : {
        "required" : [ "players", "state" ],
        "type" : "object",
        "properties" : {
          "players" : {
            "type" : "array",
            "description" : "Player names",
            "example" : [ "player1", "player2" ],
            "items" : {
              "type" : "string"
            },
            "default" : [ "player1", "player2" ]
          },
          "state" : {
            "type" : "string",
            "example" : "IN_PROGRESS",
            "default" : "IN_PROGRESS",
            "enum" : [ "IN_PROGRESS", "DONE" ]
          },
          "winner" : {
            "type" : "string",
            "description" : "Winning player name, if game is complete",
            "nullable" : true,
            "example" : "player1"
          }
        },
        "description" : "Details of a game in progress",
        "example" : {
          "winner" : "player1",
          "players" : [ "player1", "player2" ],
          "state" : "IN_PROGRESS"
        }
      },
      "GameMove" : {
        "required" : [ "player", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "example" : "MOVE",
            "default" : "MOVE",
            "enum" : [ "MOVE", "QUIT" ]
          },
          "player" : {
            "type" : "string",
            "description" : "Player name who made the move",
            "example" : "player1"
          },
          "column" : {
            "minimum" : 1,
            "type" : "number",
            "format" : "int32",
            "example" : 1
          }
        },
        "description" : "A single move within a game",
        "example" : {
          "column" : 1,
          "type" : "MOVE",
          "player" : "player1"
        }
      },
      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "games" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "example" : {
          "games" : [ "games", "games" ]
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "gameId" : {
            "type" : "string"
          }
        },
        "example" : {
          "gameId" : "gameId"
        }
      },
      "inline_response_200_2" : {
        "type" : "object",
        "properties" : {
          "moves" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GameMove"
            }
          }
        },
        "example" : {
          "moves" : [ {
            "column" : 1,
            "type" : "MOVE",
            "player" : "player1"
          }, {
            "column" : 1,
            "type" : "MOVE",
            "player" : "player1"
          } ]
        }
      }
    }
  }
}
